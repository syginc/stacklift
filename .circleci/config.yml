version: 2
jobs:
  build:
    working_directory: ~/build
    docker:
      - image: python:3.7

    steps:
      - checkout

      - run: pip install pipenv

      - restore_cache:
          key: pipenv-{{ arch }}-{{ checksum "Pipfile.lock" }}

      - run: pipenv sync --dev

      - save_cache:
          key: pipenv-{{ arch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs
            - ~/.cache/pipenv

      - run:
          name: Override version
          command: if [ -n "$CIRCLE_TAG" ]; then echo "${CIRCLE_TAG:1}" > VERSION; fi

      - run: pipenv run python3 setup.py sdist

      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: dist/

      - persist_to_workspace:
          root: .
          paths:
            - dist

  publish:
    working_directory: ~/build
    docker:
      - image: python:3.7

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run: pip install pipenv

      - restore_cache:
          key: pipenv-{{ arch }}-{{ checksum "Pipfile.lock" }}

      - run: pipenv sync --dev

      - save_cache:
          key: pipenv-{{ arch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs
            - ~/.cache/pipenv

      # TWINE_USERNAME and TWINE_PASSWORD environmental variables are required
      # - run: pipenv run twine upload --repository-url https://test.pypi.org/legacy/ dist/*
      - run: pipenv run twine upload dist/*

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
