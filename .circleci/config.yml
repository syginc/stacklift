version: 2
jobs:
  build:
    working_directory: ~/build
    docker:
      - image: python:3.7

    steps:
      - checkout

      - run: pip install poetry

      - restore_cache:
          key: poetry-{{ arch }}-{{ checksum "poetry.lock" }}

      - run: poetry install

      - save_cache:
          key: pipenv-{{ arch }}-{{ checksum "poetry.lock" }}
          paths:
            - ~/.cache/pypoetry/virtualenvs

      # TODO: test

      - persist_to_workspace:
          root: .
          paths:
            - dist

  publish:
    working_directory: ~/build
    docker:
      - image: python:3.8

    steps:
      - checkout

      - attach_workspace:
          at: .

      - run: pip install poetry

      - restore_cache:
          key: poetry-{{ arch }}-{{ checksum "poetry.lock" }}

      - run: poetry install

      - save_cache:
          key: pipenv-{{ arch }}-{{ checksum "poetry.lock" }}
          paths:
            - ~/.cache/pypoetry/virtualenvs

      # TODO: set version with poetry
      
      # TWINE_USERNAME and TWINE_PASSWORD environmental variables are required
      # - run: pipenv run twine upload --repository-url https://test.pypi.org/legacy/ dist/*
      - run: poetry publish --build --username "${TWINE_USERNAME}" --password "${TWINE_PASSWORD}" --no-interaction

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
